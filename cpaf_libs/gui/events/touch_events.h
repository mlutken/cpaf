#pragma once
#include <cstdint>
#include <cpaf_libs/gui/events/base_events.h>

namespace cpaf::gui::events {


/** @brief Touch events parameters (TouchBegan, TouchMoved, TouchEnded)
 *
*/
struct touch : public base
{
    std::string name() const override { return ""; }

    enum class type {
        unknown,    //!< Unknown type
        down,       //!< user has touched input device
        up,         //!< user stopped touching input device
        move,       //!< user is dragging finger on input device

        COUNT
    };

    static std::string to_name (type t);

    float                   x           = 0;    //!< The x position of the touch event, normalized (0...1), relative to the top of the owner window
    float                   y           = 0;    //!< The Y position of the touch event, normalized (0...1), relative to the top of the owner window
    float                   delta_x     = 0;    //!< The distance moved in the x-axis, normalized (-1...1)
    float                   delta_y     = 0;    //!< The distance moved in the y-axis, normalized (-1...1)
    float                   pressure    = 0;    //!< The quantity of pressure applied, normalized (0...1)
    std::uint32_t           finger      = 0;    //!< Index of the finger in case of multi-touch events
    events::pointer_type    pointer_type= pointer_type::touch;   //!< Event generated by a mouse or a touch device
};

} //END namespace cpaf::gui::events



