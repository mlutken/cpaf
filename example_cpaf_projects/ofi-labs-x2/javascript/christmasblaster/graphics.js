// This file has been generated by svg2code

function graphics_draw_000(c) // 'branch'
{
    c.beginPath();
    c.moveTo(388.0, 180.7);
    c.bezierCurveTo(383.4, 174.8, 377.7, 184.2, 370.5, 194.7);
    c.bezierCurveTo(363.3, 205.2, 350.6, 220.8, 325.6, 257.0);
    c.bezierCurveTo(286.4, 309.9, 228.5, 376.0, 194.2, 423.3);
    c.bezierCurveTo(192.6, 429.8, 198.9, 430.8, 207.0, 422.3);
    c.bezierCurveTo(215.1, 413.8, 264.1, 352.7, 295.3, 310.5);
    c.bezierCurveTo(326.5, 268.3, 392.7, 186.7, 388.0, 180.7);
    c.closePath();
    c.fillStyle = 'rgb(80, 45, 22)';
    c.fill();
    c.beginPath();
    c.moveTo(381.3, 184.0);
    c.bezierCurveTo(378.3, 179.1, 378.1, 158.8, 377.5, 145.0);
    c.bezierCurveTo(376.6, 127.1, 377.7, 117.5, 379.3, 116.1);
    c.bezierCurveTo(381.3, 117.9, 382.2, 126.7, 382.9, 144.1);
    c.bezierCurveTo(383.9, 172.7, 383.7, 179.7, 381.3, 184.0);
    c.closePath();
    c.fillStyle = 'rgb(0, 128, 0)';
    c.fill();
    c.beginPath();
    c.moveTo(374.1, 193.3);
    c.bezierCurveTo(370.8, 188.5, 369.0, 167.0, 367.2, 152.6);
    c.bezierCurveTo(364.9, 133.8, 365.2, 123.6, 366.6, 121.9);
    c.bezierCurveTo(368.7, 123.6, 370.3, 132.8, 372.4, 151.1);
    c.bezierCurveTo(375.7, 181.1, 376.1, 188.6, 374.1, 193.3);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(364.9, 208.4);
    c.bezierCurveTo(361.2, 203.7, 358.9, 182.6, 356.7, 168.4);
    c.bezierCurveTo(353.9, 149.8, 354.0, 139.7, 355.6, 138.0);
    c.bezierCurveTo(357.9, 139.7, 359.8, 148.7, 362.3, 166.8);
    c.bezierCurveTo(366.4, 196.4, 367.0, 203.7, 364.9, 208.4);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(355.0, 219.4);
    c.bezierCurveTo(351.6, 214.8, 349.3, 194.6, 347.3, 181.1);
    c.bezierCurveTo(344.6, 163.3, 344.8, 153.7, 346.2, 152.1);
    c.bezierCurveTo(348.4, 153.7, 350.2, 162.3, 352.6, 179.5);
    c.bezierCurveTo(356.5, 207.8, 357.0, 214.9, 355.0, 219.4);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(347.8, 230.1);
    c.bezierCurveTo(344.2, 225.7, 341.0, 205.7, 338.4, 192.2);
    c.bezierCurveTo(334.9, 174.6, 334.6, 165.0, 336.0, 163.3);
    c.bezierCurveTo(338.3, 164.8, 340.4, 173.3, 343.6, 190.4);
    c.bezierCurveTo(348.7, 218.5, 349.6, 225.5, 347.8, 230.1);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(339.0, 241.0);
    c.bezierCurveTo(335.6, 236.2, 333.5, 215.0, 331.5, 200.8);
    c.bezierCurveTo(329.0, 182.2, 329.1, 172.1, 330.5, 170.4);
    c.bezierCurveTo(332.6, 172.0, 334.3, 181.1, 336.6, 199.2);
    c.bezierCurveTo(340.3, 228.9, 340.8, 236.3, 339.0, 241.0);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(327.1, 258.0);
    c.bezierCurveTo(323.8, 253.4, 322.6, 233.1, 321.1, 219.4);
    c.bezierCurveTo(319.3, 201.6, 319.9, 192.0, 321.4, 190.4);
    c.bezierCurveTo(323.5, 192.1, 324.9, 200.8, 326.5, 218.1);
    c.bezierCurveTo(329.1, 246.6, 329.3, 253.6, 327.1, 258.0);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(313.5, 276.5);
    c.bezierCurveTo(311.6, 272.6, 312.2, 256.3, 312.3, 245.3);
    c.bezierCurveTo(312.4, 231.0, 313.5, 223.3, 314.6, 222.1);
    c.bezierCurveTo(315.9, 223.6, 316.2, 230.6, 316.0, 244.6);
    c.bezierCurveTo(315.6, 267.5, 315.2, 273.1, 313.5, 276.5);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(282.9, 315.2);
    c.bezierCurveTo(278.9, 312.2, 275.2, 298.3, 272.2, 289.0);
    c.bezierCurveTo(268.2, 276.8, 267.7, 270.1, 269.1, 268.9);
    c.bezierCurveTo(271.5, 269.9, 273.9, 275.8, 277.6, 287.7);
    c.bezierCurveTo(283.6, 307.1, 284.6, 312.0, 282.9, 315.2);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(266.8, 335.7);
    c.bezierCurveTo(263.6, 331.3, 261.6, 311.5, 259.7, 298.3);
    c.bezierCurveTo(257.3, 280.9, 257.4, 271.5, 258.7, 269.9);
    c.bezierCurveTo(260.7, 271.5, 262.4, 279.9, 264.6, 296.7);
    c.bezierCurveTo(268.1, 324.4, 268.6, 331.3, 266.8, 335.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(255.7, 350.7);
    c.bezierCurveTo(252.2, 346.1, 250.0, 325.9, 248.0, 312.4);
    c.bezierCurveTo(245.3, 294.6, 245.4, 285.0, 246.9, 283.4);
    c.bezierCurveTo(249.1, 285.0, 250.8, 293.6, 253.2, 310.8);
    c.bezierCurveTo(257.1, 339.1, 257.6, 346.2, 255.7, 350.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(243.3, 364.6);
    c.bezierCurveTo(239.8, 360.0, 237.6, 339.8, 235.5, 326.2);
    c.bezierCurveTo(232.9, 308.5, 233.0, 298.9, 234.5, 297.2);
    c.bezierCurveTo(236.7, 298.8, 238.4, 307.5, 240.8, 324.7);
    c.bezierCurveTo(244.7, 353.0, 245.2, 360.1, 243.3, 364.6);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(232.3, 378.8);
    c.bezierCurveTo(228.8, 374.3, 226.6, 354.1, 224.6, 340.5);
    c.bezierCurveTo(221.9, 322.8, 222.1, 313.1, 223.5, 311.5);
    c.bezierCurveTo(225.7, 313.1, 227.5, 321.8, 229.8, 339.0);
    c.bezierCurveTo(233.8, 367.3, 234.3, 374.3, 232.3, 378.8);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(223.3, 390.1);
    c.bezierCurveTo(219.8, 385.6, 217.6, 365.4, 215.5, 351.8);
    c.bezierCurveTo(212.9, 334.1, 213.0, 324.4, 214.5, 322.8);
    c.bezierCurveTo(216.6, 324.4, 218.4, 333.0, 220.8, 350.3);
    c.bezierCurveTo(224.7, 378.6, 225.2, 385.6, 223.3, 390.1);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(212.5, 405.0);
    c.bezierCurveTo(209.0, 400.5, 206.8, 380.3, 204.7, 366.7);
    c.bezierCurveTo(202.1, 349.0, 202.2, 339.3, 203.7, 337.7);
    c.bezierCurveTo(205.8, 339.3, 207.6, 348.0, 210.0, 365.2);
    c.bezierCurveTo(213.9, 393.5, 214.4, 400.5, 212.5, 405.0);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(380.8, 194.3);
    c.bezierCurveTo(385.6, 196.5, 402.7, 191.1, 414.3, 188.1);
    c.bezierCurveTo(429.4, 184.1, 437.2, 180.1, 438.0, 177.8);
    c.bezierCurveTo(436.0, 175.9, 428.4, 177.3, 413.8, 181.4);
    c.bezierCurveTo(389.7, 188.1, 383.8, 190.3, 380.8, 194.3);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(371.0, 205.4);
    c.bezierCurveTo(376.2, 208.2, 396.4, 206.0, 410.0, 205.2);
    c.bezierCurveTo(427.9, 204.1, 437.3, 201.7, 438.5, 199.8);
    c.bezierCurveTo(436.5, 197.8, 427.6, 197.8, 410.3, 199.1);
    c.bezierCurveTo(381.9, 201.2, 374.9, 202.3, 371.0, 205.4);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(358.2, 221.6);
    c.bezierCurveTo(363.1, 224.2, 382.4, 222.1, 395.5, 221.3);
    c.bezierCurveTo(412.6, 220.2, 421.5, 218.0, 422.7, 216.1);
    c.bezierCurveTo(420.8, 214.2, 412.3, 214.3, 395.8, 215.6);
    c.bezierCurveTo(368.6, 217.6, 361.9, 218.6, 358.2, 221.6);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(349.8, 231.3);
    c.bezierCurveTo(354.6, 234.1, 374.0, 233.0, 387.1, 232.8);
    c.bezierCurveTo(404.2, 232.6, 413.2, 230.8, 414.5, 229.0);
    c.bezierCurveTo(412.6, 227.0, 404.2, 226.6, 387.6, 227.1);
    c.bezierCurveTo(360.4, 227.9, 353.6, 228.5, 349.8, 231.3);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(341.5, 242.7);
    c.bezierCurveTo(346.7, 245.1, 366.8, 242.7, 380.5, 241.7);
    c.bezierCurveTo(398.4, 240.3, 407.8, 238.0, 409.1, 236.2);
    c.bezierCurveTo(407.1, 234.4, 398.2, 234.6, 380.9, 236.2);
    c.bezierCurveTo(352.5, 238.7, 345.5, 239.8, 341.5, 242.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(332.0, 255.9);
    c.bezierCurveTo(336.9, 258.7, 356.2, 257.5, 369.3, 257.3);
    c.bezierCurveTo(386.5, 257.1, 395.5, 255.3, 396.8, 253.5);
    c.bezierCurveTo(394.9, 251.5, 386.5, 251.1, 369.9, 251.6);
    c.bezierCurveTo(342.6, 252.4, 335.9, 253.1, 332.0, 255.9);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(325.5, 267.7);
    c.bezierCurveTo(330.3, 270.0, 349.0, 267.9, 361.6, 267.0);
    c.bezierCurveTo(378.2, 265.8, 386.9, 263.6, 388.0, 261.9);
    c.bezierCurveTo(386.2, 260.2, 378.0, 260.3, 362.0, 261.7);
    c.bezierCurveTo(335.6, 263.9, 329.2, 264.9, 325.5, 267.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(313.3, 280.9);
    c.bezierCurveTo(318.4, 283.7, 338.0, 281.8, 351.3, 281.1);
    c.bezierCurveTo(368.7, 280.1, 377.8, 277.9, 379.0, 275.9);
    c.bezierCurveTo(377.0, 273.8, 368.4, 273.8, 351.5, 274.9);
    c.bezierCurveTo(323.9, 276.8, 317.1, 277.7, 313.3, 280.9);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(300.3, 298.3);
    c.bezierCurveTo(305.3, 300.9, 324.6, 298.9, 337.6, 298.0);
    c.bezierCurveTo(354.7, 296.9, 363.7, 294.7, 364.9, 292.9);
    c.bezierCurveTo(362.9, 291.0, 354.5, 291.0, 337.9, 292.3);
    c.bezierCurveTo(310.7, 294.4, 304.1, 295.4, 300.3, 298.3);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(288.0, 311.4);
    c.bezierCurveTo(292.6, 313.8, 310.8, 311.9, 323.1, 311.1);
    c.bezierCurveTo(339.2, 310.1, 347.7, 307.9, 348.8, 306.2);
    c.bezierCurveTo(346.9, 304.4, 339.0, 304.5, 323.4, 305.7);
    c.bezierCurveTo(297.8, 307.6, 291.5, 308.6, 288.0, 311.4);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(279.0, 321.7);
    c.bezierCurveTo(283.8, 324.6, 303.2, 324.0, 316.3, 324.1);
    c.bezierCurveTo(333.4, 324.2, 342.5, 322.6, 343.8, 320.9);
    c.bezierCurveTo(342.0, 318.8, 333.5, 318.3, 317.0, 318.4);
    c.bezierCurveTo(289.7, 318.5, 283.0, 319.0, 279.0, 321.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(268.9, 337.0);
    c.bezierCurveTo(273.7, 339.4, 292.6, 337.2, 305.3, 336.3);
    c.bezierCurveTo(322.0, 335.0, 330.7, 332.9, 331.9, 331.2);
    c.bezierCurveTo(330.0, 329.4, 321.8, 329.6, 305.7, 331.0);
    c.bezierCurveTo(279.1, 333.3, 272.6, 334.3, 268.9, 337.0);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(257.4, 351.7);
    c.bezierCurveTo(262.3, 354.3, 281.6, 352.2, 294.7, 351.4);
    c.bezierCurveTo(311.8, 350.3, 320.7, 348.0, 321.9, 346.2);
    c.bezierCurveTo(320.0, 344.3, 311.5, 344.4, 295.0, 345.6);
    c.bezierCurveTo(267.8, 347.7, 261.1, 348.7, 257.4, 351.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(247.1, 367.4);
    c.bezierCurveTo(252.1, 370.0, 271.4, 367.9, 284.5, 367.1);
    c.bezierCurveTo(301.5, 366.0, 310.5, 363.7, 311.7, 361.9);
    c.bezierCurveTo(309.7, 360.0, 301.3, 360.1, 284.8, 361.3);
    c.bezierCurveTo(257.6, 363.4, 250.9, 364.4, 247.1, 367.4);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(236.2, 381.7);
    c.bezierCurveTo(241.2, 384.3, 260.5, 382.2, 273.5, 381.4);
    c.bezierCurveTo(290.6, 380.3, 299.6, 378.1, 300.8, 376.2);
    c.bezierCurveTo(298.8, 374.3, 290.4, 374.4, 273.8, 375.7);
    c.bezierCurveTo(246.6, 377.7, 240.0, 378.7, 236.2, 381.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(227.7, 393.4);
    c.bezierCurveTo(232.6, 396.0, 251.9, 393.9, 265.0, 393.1);
    c.bezierCurveTo(282.1, 392.0, 291.0, 389.8, 292.2, 387.9);
    c.bezierCurveTo(290.3, 386.0, 281.8, 386.1, 265.3, 387.4);
    c.bezierCurveTo(238.1, 389.4, 231.4, 390.4, 227.7, 393.4);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(216.1, 407.7);
    c.bezierCurveTo(221.1, 410.3, 240.3, 408.2, 253.4, 407.4);
    c.bezierCurveTo(270.5, 406.3, 279.4, 404.0, 280.6, 402.2);
    c.bezierCurveTo(278.7, 400.3, 270.2, 400.4, 253.7, 401.6);
    c.bezierCurveTo(226.5, 403.7, 219.9, 404.7, 216.1, 407.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(276.1, 153.7);
    c.bezierCurveTo(268.6, 153.0, 270.4, 164.1, 273.0, 176.6);
    c.bezierCurveTo(279.5, 215.3, 285.0, 249.6, 292.8, 300.5);
    c.bezierCurveTo(296.4, 306.2, 299.7, 301.0, 299.1, 289.2);
    c.bezierCurveTo(285.8, 226.5, 293.6, 221.7, 276.1, 153.7);
    c.closePath();
    c.fillStyle = 'rgb(80, 45, 22)';
    c.fill();
    c.beginPath();
    c.moveTo(272.7, 161.3);
    c.bezierCurveTo(268.8, 160.5, 258.7, 149.4, 251.7, 142.0);
    c.bezierCurveTo(242.7, 132.3, 238.9, 125.8, 239.0, 123.9);
    c.bezierCurveTo(240.9, 123.7, 245.5, 128.2, 254.2, 137.7);
    c.bezierCurveTo(268.5, 153.3, 271.8, 157.4, 272.7, 161.3);
    c.closePath();
    c.fillStyle = 'rgb(0, 128, 0)';
    c.fill();
    c.beginPath();
    c.moveTo(274.5, 173.0);
    c.bezierCurveTo(271.2, 172.4, 261.6, 163.3, 255.1, 157.3);
    c.bezierCurveTo(246.6, 149.4, 242.7, 144.0, 242.6, 142.4);
    c.bezierCurveTo(244.1, 142.1, 248.5, 145.7, 256.7, 153.5);
    c.bezierCurveTo(270.2, 166.2, 273.3, 169.6, 274.5, 173.0);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(279.0, 190.1);
    c.bezierCurveTo(274.9, 189.6, 263.2, 179.2, 255.2, 172.2);
    c.bezierCurveTo(244.7, 163.1, 240.1, 156.7, 240.0, 154.7);
    c.bezierCurveTo(241.9, 154.3, 247.3, 158.4, 257.3, 167.3);
    c.bezierCurveTo(273.8, 182.1, 277.7, 186.1, 279.0, 190.1);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(280.1, 204.8);
    c.bezierCurveTo(276.2, 204.3, 265.0, 194.3, 257.4, 187.7);
    c.bezierCurveTo(247.4, 179.0, 242.9, 172.8, 242.8, 171.0);
    c.bezierCurveTo(244.6, 170.5, 249.7, 174.5, 259.3, 183.1);
    c.bezierCurveTo(275.1, 197.2, 278.8, 201.0, 280.1, 204.8);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(282.9, 217.4);
    c.bezierCurveTo(279.0, 217.1, 267.3, 207.6, 259.4, 201.3);
    c.bezierCurveTo(249.0, 193.1, 244.3, 187.1, 244.1, 185.3);
    c.bezierCurveTo(245.9, 184.8, 251.2, 188.5, 261.2, 196.6);
    c.bezierCurveTo(277.6, 210.0, 281.4, 213.6, 282.9, 217.4);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(284.6, 231.3);
    c.bezierCurveTo(280.7, 230.7, 269.0, 220.2, 261.0, 213.2);
    c.bezierCurveTo(250.5, 204.0, 245.8, 197.6, 245.6, 195.8);
    c.bezierCurveTo(247.4, 195.4, 252.7, 199.6, 262.8, 208.6);
    c.bezierCurveTo(279.3, 223.5, 283.2, 227.4, 284.6, 231.3);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(286.7, 247.4);
    c.bezierCurveTo(282.8, 247.1, 271.1, 237.6, 263.2, 231.3);
    c.bezierCurveTo(252.8, 223.0, 248.1, 217.0, 248.0, 215.2);
    c.bezierCurveTo(249.8, 214.7, 255.0, 218.4, 265.0, 226.6);
    c.bezierCurveTo(281.4, 240.0, 285.2, 243.6, 286.7, 247.4);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(292.6, 264.3);
    c.bezierCurveTo(288.7, 263.8, 277.5, 254.7, 269.8, 248.7);
    c.bezierCurveTo(259.8, 240.8, 255.2, 235.3, 255.1, 233.6);
    c.bezierCurveTo(256.9, 233.3, 262.0, 236.9, 271.6, 244.7);
    c.bezierCurveTo(287.5, 257.5, 291.2, 260.9, 292.6, 264.3);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(293.7, 284.3);
    c.bezierCurveTo(290.6, 284.0, 282.2, 275.5, 276.4, 269.8);
    c.bezierCurveTo(268.9, 262.4, 265.6, 257.0, 265.6, 255.3);
    c.bezierCurveTo(267.1, 254.8, 270.9, 258.2, 278.2, 265.5);
    c.bezierCurveTo(290.1, 277.6, 292.8, 280.9, 293.7, 284.3);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(279.7, 168.8);
    c.bezierCurveTo(282.8, 167.5, 287.0, 156.0, 289.9, 148.3);
    c.bezierCurveTo(293.8, 138.2, 294.3, 131.7, 293.4, 130.0);
    c.bezierCurveTo(291.6, 130.0, 289.4, 134.7, 285.8, 144.5);
    c.bezierCurveTo(279.9, 160.8, 278.8, 165.0, 279.7, 168.8);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(281.0, 183.6);
    c.bezierCurveTo(284.4, 182.4, 291.7, 170.7, 296.7, 163.0);
    c.bezierCurveTo(303.2, 152.8, 305.4, 146.1, 305.0, 144.4);
    c.bezierCurveTo(303.2, 144.4, 299.7, 149.1, 293.5, 159.1);
    c.bezierCurveTo(283.3, 175.5, 281.1, 179.8, 281.0, 183.6);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(283.9, 204.1);
    c.bezierCurveTo(287.2, 202.8, 294.4, 191.5, 299.3, 183.9);
    c.bezierCurveTo(305.7, 174.0, 307.9, 167.5, 307.5, 165.8);
    c.bezierCurveTo(305.8, 165.8, 302.4, 170.4, 296.2, 180.2);
    c.bezierCurveTo(286.2, 196.1, 284.0, 200.3, 283.9, 204.1);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(285.1, 216.9);
    c.bezierCurveTo(288.4, 215.8, 295.8, 205.2, 300.9, 198.0);
    c.bezierCurveTo(307.6, 188.7, 310.1, 182.5, 309.7, 180.8);
    c.bezierCurveTo(308.1, 180.8, 304.5, 185.1, 298.2, 194.2);
    c.bezierCurveTo(287.7, 209.3, 285.3, 213.2, 285.1, 216.9);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(287.7, 230.7);
    c.bezierCurveTo(290.9, 229.5, 298.0, 218.9, 302.9, 211.8);
    c.bezierCurveTo(309.3, 202.5, 311.6, 196.5, 311.2, 194.9);
    c.bezierCurveTo(309.6, 194.9, 306.2, 199.3, 300.1, 208.4);
    c.bezierCurveTo(290.1, 223.4, 287.8, 227.3, 287.7, 230.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(288.8, 245.0);
    c.bezierCurveTo(291.7, 244.0, 298.3, 234.1, 302.8, 227.5);
    c.bezierCurveTo(308.7, 218.8, 310.9, 213.1, 310.6, 211.6);
    c.bezierCurveTo(309.1, 211.5, 306.0, 215.5, 300.4, 224.0);
    c.bezierCurveTo(291.2, 238.0, 289.1, 241.7, 288.8, 245.0);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(291.6, 258.9);
    c.bezierCurveTo(294.3, 257.8, 300.4, 248.2, 304.5, 241.8);
    c.bezierCurveTo(309.9, 233.4, 311.8, 227.9, 311.5, 226.5);
    c.bezierCurveTo(310.1, 226.6, 307.2, 230.5, 302.1, 238.7);
    c.bezierCurveTo(293.7, 252.2, 291.8, 255.8, 291.6, 258.9);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(293.5, 279.0);
    c.bezierCurveTo(295.6, 278.0, 300.3, 268.5, 303.5, 262.2);
    c.bezierCurveTo(307.7, 253.9, 309.2, 248.5, 309.0, 247.1);
    c.bezierCurveTo(307.9, 247.1, 305.7, 251.0, 301.6, 259.1);
    c.bezierCurveTo(295.0, 272.4, 293.6, 275.9, 293.5, 279.0);
    c.closePath();
    c.fill();
}

function graphics_draw_001(c) // 'flower1'
{
    c.beginPath();
    c.moveTo(349.3, 126.8);
    c.bezierCurveTo(337.0, 145.4, 306.8, 105.8, 306.8, 105.8);
    c.bezierCurveTo(306.8, 105.8, 320.8, 152.9, 297.2, 151.9);
    c.bezierCurveTo(273.6, 150.9, 289.3, 105.6, 289.3, 105.6);
    c.bezierCurveTo(289.3, 105.6, 259.9, 139.5, 248.2, 119.9);
    c.bezierCurveTo(236.6, 100.3, 280.7, 90.5, 280.7, 90.5);
    c.bezierCurveTo(280.7, 90.5, 234.3, 81.9, 247.9, 60.4);
    c.bezierCurveTo(261.5, 38.8, 289.6, 75.4, 289.6, 75.4);
    c.bezierCurveTo(289.6, 75.4, 274.7, 30.9, 299.6, 31.5);
    c.bezierCurveTo(324.4, 32.1, 307.0, 75.6, 307.0, 75.6);
    c.bezierCurveTo(307.0, 75.6, 338.6, 40.9, 351.1, 62.6);
    c.bezierCurveTo(363.7, 84.3, 315.6, 90.8, 315.6, 90.8);
    c.bezierCurveTo(315.6, 90.8, 361.6, 108.2, 349.3, 126.8);
    c.closePath();
    c.fillStyle = 'rgb(69, 33, 73)';
    c.fill();
    c.beginPath();
    c.moveTo(298.8, 79.7);
    c.bezierCurveTo(307.5, 79.7, 312.9, 91.8, 306.9, 97.6);
    c.bezierCurveTo(300.8, 103.5, 291.2, 102.6, 288.0, 96.1);
    c.bezierCurveTo(284.9, 89.6, 290.1, 79.7, 298.8, 79.7);
    c.closePath();
    c.fillStyle = 'rgb(222, 202, 33)';
    c.fill();
    c.beginPath();
    c.moveTo(293.3, 75.1);
    c.bezierCurveTo(293.3, 75.1, 281.5, 36.2, 298.8, 35.2);
    c.bezierCurveTo(316.2, 34.3, 304.0, 75.6, 304.0, 75.6);
    c.lineTo(303.0, 66.8);
    c.lineTo(300.2, 74.2);
    c.lineTo(298.8, 66.5);
    c.lineTo(296.9, 74.1);
    c.lineTo(294.0, 66.5);
    c.lineTo(293.3, 75.1);
    c.closePath();
    c.fillStyle = 'rgb(163, 64, 172)';
    c.fill();
    c.beginPath();
    c.moveTo(309.1, 77.9);
    c.bezierCurveTo(309.1, 77.9, 338.3, 49.6, 347.1, 64.6);
    c.bezierCurveTo(355.8, 79.6, 313.5, 87.6, 313.5, 87.6);
    c.lineTo(321.0, 82.7);
    c.lineTo(313.1, 83.6);
    c.lineTo(319.2, 78.9);
    c.lineTo(311.6, 80.6);
    c.lineTo(317.0, 74.6);
    c.lineTo(309.1, 77.9);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(316.0, 94.5);
    c.bezierCurveTo(316.0, 94.5, 354.2, 108.8, 344.4, 123.1);
    c.bezierCurveTo(334.6, 137.4, 309.2, 102.6, 309.2, 102.6);
    c.lineTo(316.8, 107.2);
    c.lineTo(312.6, 100.5);
    c.lineTo(319.5, 104.1);
    c.lineTo(314.7, 97.9);
    c.lineTo(322.5, 100.2);
    c.lineTo(316.0, 94.5);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(292.3, 107.7);
    c.bezierCurveTo(292.3, 107.7, 280.4, 146.7, 297.8, 147.7);
    c.bezierCurveTo(315.1, 148.6, 302.9, 107.2, 302.9, 107.2);
    c.lineTo(301.9, 116.1);
    c.lineTo(299.2, 108.6);
    c.lineTo(297.8, 116.3);
    c.lineTo(295.8, 108.7);
    c.lineTo(292.9, 116.3);
    c.lineTo(292.3, 107.7);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(287.8, 102.9);
    c.bezierCurveTo(287.8, 102.9, 261.6, 131.4, 252.6, 117.5);
    c.bezierCurveTo(243.6, 103.7, 283.2, 93.9, 283.2, 93.9);
    c.lineTo(276.4, 99.0);
    c.lineTo(283.8, 97.7);
    c.lineTo(278.2, 102.5);
    c.lineTo(285.3, 100.4);
    c.lineTo(280.5, 106.5);
    c.lineTo(287.8, 102.9);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(282.6, 87.2);
    c.bezierCurveTo(282.6, 87.2, 244.8, 78.7, 252.1, 63.5);
    c.bezierCurveTo(259.4, 48.3, 288.0, 78.4, 288.0, 78.4);
    c.lineTo(280.2, 75.0);
    c.lineTo(285.1, 81.0);
    c.lineTo(278.1, 78.5);
    c.lineTo(283.4, 83.7);
    c.lineTo(275.8, 82.6);
    c.lineTo(282.6, 87.2);
    c.closePath();
    c.fill();
}

function graphics_draw_002(c) // 'flower2'
{
    c.beginPath();
    c.moveTo(348.9, 550.1);
    c.bezierCurveTo(330.2, 575.5, 309.6, 530.5, 309.6, 530.5);
    c.bezierCurveTo(309.6, 530.5, 332.9, 576.2, 299.7, 574.8);
    c.bezierCurveTo(266.5, 573.5, 292.2, 530.4, 292.2, 530.4);
    c.bezierCurveTo(292.2, 530.4, 264.9, 568.5, 251.4, 543.9);
    c.bezierCurveTo(238.0, 519.4, 283.6, 515.2, 283.6, 515.2);
    c.bezierCurveTo(283.6, 515.2, 236.9, 512.7, 253.6, 486.2);
    c.bezierCurveTo(270.3, 459.7, 292.4, 500.2, 292.4, 500.2);
    c.bezierCurveTo(292.4, 500.2, 270.5, 457.9, 302.3, 457.7);
    c.bezierCurveTo(334.1, 457.4, 309.9, 500.3, 309.9, 500.3);
    c.bezierCurveTo(309.9, 500.3, 336.1, 461.0, 351.5, 488.8);
    c.bezierCurveTo(366.8, 516.5, 318.5, 515.5, 318.5, 515.5);
    c.bezierCurveTo(318.5, 515.5, 367.7, 524.8, 348.9, 550.1);
    c.closePath();
    c.fillStyle = 'rgb(73, 33, 33)';
    c.fill();
    c.beginPath();
    c.moveTo(301.6, 504.4);
    c.bezierCurveTo(310.4, 504.5, 315.8, 516.6, 309.7, 522.4);
    c.bezierCurveTo(303.7, 528.2, 294.0, 527.3, 290.9, 520.8);
    c.bezierCurveTo(287.7, 514.3, 292.9, 504.4, 301.6, 504.4);
    c.closePath();
    c.fillStyle = 'rgb(222, 202, 33)';
    c.fill();
    c.beginPath();
    c.moveTo(296.0, 500.0);
    c.bezierCurveTo(296.0, 500.0, 278.6, 463.4, 301.3, 462.8);
    c.bezierCurveTo(324.0, 462.3, 306.6, 500.5, 306.6, 500.5);
    c.lineTo(305.0, 492.4);
    c.lineTo(301.3, 499.5);
    c.lineTo(298.2, 492.4);
    c.lineTo(296.0, 500.0);
    c.closePath();
    c.fillStyle = 'rgb(172, 64, 64)';
    c.fill();
    c.beginPath();
    c.moveTo(311.8, 502.6);
    c.bezierCurveTo(311.8, 502.6, 336.3, 470.4, 347.2, 490.3);
    c.bezierCurveTo(358.1, 510.2, 316.2, 512.3, 316.2, 512.3);
    c.lineTo(322.6, 507.1);
    c.lineTo(314.6, 507.1);
    c.lineTo(319.6, 501.1);
    c.lineTo(311.8, 502.6);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(318.1, 519.8);
    c.bezierCurveTo(318.1, 519.8, 357.9, 527.2, 345.1, 545.9);
    c.bezierCurveTo(332.2, 564.6, 311.5, 528.1, 311.5, 528.1);
    c.lineTo(319.0, 531.5);
    c.lineTo(315.4, 524.3);
    c.lineTo(323.0, 526.0);
    c.lineTo(318.1, 519.8);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(295.6, 531.9);
    c.bezierCurveTo(295.6, 531.9, 278.2, 568.5, 300.9, 569.0);
    c.bezierCurveTo(323.5, 569.6, 306.2, 531.3, 306.2, 531.3);
    c.lineTo(304.6, 539.4);
    c.lineTo(300.9, 532.3);
    c.lineTo(297.8, 539.5);
    c.lineTo(295.6, 531.9);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(285.4, 512.2);
    c.bezierCurveTo(285.4, 512.2, 247.1, 509.5, 257.1, 489.9);
    c.bezierCurveTo(267.2, 470.3, 290.8, 503.4, 290.8, 503.4);
    c.lineTo(283.4, 500.9);
    c.lineTo(287.5, 507.5);
    c.lineTo(280.2, 506.6);
    c.lineTo(285.4, 512.2);
    c.closePath();
    c.fill();
    c.beginPath();
    c.moveTo(290.8, 527.8);
    c.bezierCurveTo(290.8, 527.8, 269.2, 559.7, 258.0, 541.2);
    c.bezierCurveTo(246.7, 522.7, 286.2, 518.7, 286.2, 518.7);
    c.lineTo(280.4, 523.9);
    c.lineTo(288.0, 523.6);
    c.lineTo(283.6, 529.5);
    c.lineTo(290.8, 527.8);
    c.closePath();
    c.fill();
}

function graphics_draw_003(c) // 'star1'
{
    c.beginPath();
    c.moveTo(479.0, 118.7);
    c.bezierCurveTo(474.2, 132.0, 469.4, 145.4, 464.6, 158.8);
    c.bezierCurveTo(450.9, 155.1, 437.2, 151.4, 423.5, 147.7);
    c.bezierCurveTo(431.0, 159.7, 438.4, 171.8, 445.9, 183.9);
    c.bezierCurveTo(434.5, 192.3, 423.1, 200.7, 411.7, 209.1);
    c.bezierCurveTo(425.7, 210.8, 439.8, 212.5, 453.9, 214.2);
    c.bezierCurveTo(453.4, 228.4, 452.8, 242.5, 452.2, 256.7);
    c.bezierCurveTo(462.4, 246.8, 472.5, 236.8, 482.6, 226.8);
    c.bezierCurveTo(493.3, 236.1, 504.1, 245.3, 514.8, 254.6);
    c.bezierCurveTo(513.3, 240.5, 511.8, 226.4, 510.3, 212.3);
    c.bezierCurveTo(524.2, 209.7, 538.2, 207.0, 552.1, 204.4);
    c.bezierCurveTo(540.2, 196.8, 528.2, 189.2, 516.3, 181.5);
    c.bezierCurveTo(522.9, 169.0, 529.6, 156.5, 536.2, 143.9);
    c.bezierCurveTo(522.8, 148.5, 509.4, 153.1, 495.9, 157.7);
    c.bezierCurveTo(490.3, 144.7, 484.6, 131.7, 479.0, 118.7);
    c.moveTo(479.7, 139.2);
    c.bezierCurveTo(483.7, 148.5, 487.7, 157.8, 491.8, 167.1);
    c.bezierCurveTo(501.4, 163.9, 511.0, 160.6, 520.6, 157.3);
    c.bezierCurveTo(515.8, 166.2, 511.1, 175.2, 506.3, 184.2);
    c.bezierCurveTo(514.9, 189.6, 523.4, 195.1, 532.0, 200.5);
    c.bezierCurveTo(522.0, 202.4, 512.0, 204.3, 502.1, 206.2);
    c.bezierCurveTo(503.1, 216.2, 504.2, 226.3, 505.2, 236.4);
    c.bezierCurveTo(497.6, 229.8, 489.9, 223.2, 482.2, 216.5);
    c.bezierCurveTo(475.0, 223.7, 467.8, 230.8, 460.6, 237.9);
    c.bezierCurveTo(460.9, 227.7, 461.3, 217.6, 461.7, 207.5);
    c.bezierCurveTo(451.6, 206.3, 441.6, 205.1, 431.5, 203.9);
    c.bezierCurveTo(439.7, 197.9, 447.8, 191.9, 456.0, 185.8);
    c.bezierCurveTo(450.7, 177.2, 445.3, 168.6, 440.0, 159.9);
    c.bezierCurveTo(449.8, 162.6, 459.6, 165.2, 469.4, 167.9);
    c.bezierCurveTo(472.8, 158.3, 476.2, 148.8, 479.7, 139.2);
    c.closePath();
    c.fillStyle = 'rgb(255, 217, 65)';
    c.fill();
}

function graphics_draw_004(c) // 'star2'
{
    c.beginPath();
    c.moveTo(116.3, 366.1);
    c.bezierCurveTo(112.8, 373.1, 109.4, 380.0, 106.0, 386.9);
    c.bezierCurveTo(98.3, 385.8, 90.7, 384.7, 83.1, 383.5);
    c.bezierCurveTo(86.3, 390.5, 89.6, 397.5, 92.9, 404.5);
    c.bezierCurveTo(87.2, 409.8, 81.6, 415.1, 75.9, 420.3);
    c.bezierCurveTo(83.4, 422.1, 91.0, 423.9, 98.5, 425.7);
    c.bezierCurveTo(99.1, 433.4, 99.7, 441.1, 100.3, 448.8);
    c.bezierCurveTo(106.4, 444.1, 112.5, 439.3, 118.6, 434.6);
    c.bezierCurveTo(124.9, 438.9, 131.3, 443.3, 137.7, 447.6);
    c.bezierCurveTo(137.8, 439.9, 137.9, 432.1, 138.0, 424.4);
    c.bezierCurveTo(145.4, 422.1, 152.8, 419.8, 160.1, 417.5);
    c.bezierCurveTo(154.1, 412.6, 148.1, 407.8, 142.1, 402.9);
    c.bezierCurveTo(145.0, 395.7, 147.8, 388.5, 150.6, 381.3);
    c.bezierCurveTo(143.0, 382.9, 135.5, 384.6, 127.9, 386.2);
    c.bezierCurveTo(124.0, 379.5, 120.1, 372.8, 116.3, 366.1);
    c.moveTo(116.8, 383.1);
    c.bezierCurveTo(119.2, 387.1, 121.6, 391.2, 123.9, 395.3);
    c.bezierCurveTo(128.5, 394.3, 133.1, 393.3, 137.7, 392.3);
    c.bezierCurveTo(136.0, 396.6, 134.3, 401.0, 132.6, 405.4);
    c.bezierCurveTo(136.2, 408.4, 139.9, 411.3, 143.5, 414.3);
    c.bezierCurveTo(139.0, 415.7, 134.5, 417.1, 130.0, 418.5);
    c.bezierCurveTo(130.0, 423.2, 129.9, 427.9, 129.9, 432.6);
    c.bezierCurveTo(126.0, 430.0, 122.1, 427.3, 118.2, 424.7);
    c.bezierCurveTo(114.5, 427.6, 110.8, 430.5, 107.1, 433.4);
    c.bezierCurveTo(106.7, 428.7, 106.4, 424.0, 106.0, 419.3);
    c.bezierCurveTo(101.5, 418.2, 96.9, 417.1, 92.3, 416.0);
    c.bezierCurveTo(95.7, 412.8, 99.2, 409.6, 102.6, 406.4);
    c.bezierCurveTo(100.6, 402.1, 98.6, 397.9, 96.6, 393.6);
    c.bezierCurveTo(101.3, 394.3, 105.9, 395.0, 110.6, 395.7);
    c.bezierCurveTo(112.7, 391.5, 114.8, 387.3, 116.8, 383.1);
    c.closePath();
    c.fillStyle = 'rgb(255, 230, 128)';
    c.fill();
}

function graphics_draw_005(c) // 'gingerbread1'
{
    c.beginPath();
    c.moveTo(506.5, 457.1);
    c.bezierCurveTo(490.8, 462.7, 461.9, 462.4, 451.1, 457.7);
    c.bezierCurveTo(440.2, 453.0, 435.3, 437.0, 434.9, 432.2);
    c.bezierCurveTo(434.5, 427.3, 431.9, 390.3, 434.4, 379.6);
    c.bezierCurveTo(436.9, 368.9, 446.3, 360.9, 456.4, 358.0);
    c.bezierCurveTo(466.5, 355.1, 491.6, 355.5, 503.0, 356.3);
    c.bezierCurveTo(514.4, 357.2, 527.4, 372.8, 527.9, 383.3);
    c.bezierCurveTo(528.4, 393.8, 528.1, 428.6, 525.7, 436.4);
    c.bezierCurveTo(523.2, 444.2, 522.2, 451.5, 506.5, 457.1);
    c.closePath();
    c.fillStyle = 'rgb(72, 29, 2)';
    c.fill();
    c.beginPath();
    c.moveTo(487.4, 436.0);
    c.bezierCurveTo(486.7, 448.0, 471.8, 446.0, 471.9, 434.4);
    c.bezierCurveTo(471.9, 422.7, 478.7, 417.4, 478.7, 417.4);
    c.bezierCurveTo(478.7, 417.4, 488.1, 424.0, 487.4, 436.0);
    c.closePath();
    c.fillStyle = 'rgb(253, 193, 163)';
    c.fill();
    c.beginPath();
    c.moveTo(497.3, 379.7);
    c.bezierCurveTo(506.1, 372.0, 515.7, 382.5, 507.5, 390.4);
    c.bezierCurveTo(499.3, 398.4, 489.1, 398.0, 489.1, 398.0);
    c.bezierCurveTo(489.1, 398.0, 488.6, 387.4, 497.3, 379.7);
    c.closePath();
    c.fillStyle = 'rgb(253, 221, 183)';
    c.fill();
    c.beginPath();
    c.moveTo(458.8, 379.1);
    c.bezierCurveTo(451.0, 371.8, 443.7, 386.5, 451.1, 391.9);
    c.bezierCurveTo(458.5, 397.3, 468.7, 399.2, 468.7, 399.2);
    c.bezierCurveTo(468.7, 399.2, 466.6, 386.4, 458.8, 379.1);
    c.closePath();
    c.fillStyle = 'rgb(255, 191, 163)';
    c.fill();
}

function graphics_draw_006(c) // 'gingerbread2'
{
    c.beginPath();
    c.moveTo(71.2, 141.0);
    c.bezierCurveTo(84.8, 135.2, 141.1, 137.3, 148.8, 139.5);
    c.bezierCurveTo(156.4, 141.8, 163.6, 150.1, 164.0, 156.0);
    c.bezierCurveTo(164.5, 162.0, 164.6, 244.1, 160.8, 253.2);
    c.bezierCurveTo(157.0, 262.4, 152.6, 263.5, 143.1, 266.2);
    c.bezierCurveTo(133.5, 269.0, 84.1, 268.6, 76.1, 267.2);
    c.bezierCurveTo(68.1, 265.8, 63.2, 260.0, 59.5, 251.5);
    c.bezierCurveTo(55.7, 243.0, 55.3, 167.8, 55.7, 163.4);
    c.bezierCurveTo(56.1, 158.9, 57.7, 146.7, 71.2, 141.0);
    c.closePath();
    c.fillStyle = 'rgb(85, 34, 2)';
    c.fill();
    c.beginPath();
    c.moveTo(90.5, 161.1);
    c.bezierCurveTo(82.6, 150.7, 69.9, 160.0, 77.0, 170.5);
    c.bezierCurveTo(84.1, 181.0, 96.2, 185.1, 96.2, 185.1);
    c.bezierCurveTo(96.2, 185.1, 98.3, 171.4, 90.5, 161.1);
    c.closePath();
    c.fillStyle = 'rgb(254, 205, 172)';
    c.fill();
    c.beginPath();
    c.moveTo(129.8, 160.7);
    c.bezierCurveTo(138.8, 150.7, 151.0, 162.3, 142.8, 172.4);
    c.bezierCurveTo(134.7, 182.6, 122.5, 184.4, 122.5, 184.4);
    c.bezierCurveTo(122.5, 184.4, 120.9, 170.6, 129.8, 160.7);
    c.closePath();
    c.fillStyle = 'rgb(254, 197, 158)';
    c.fill();
    c.beginPath();
    c.moveTo(87.2, 241.7);
    c.bezierCurveTo(79.3, 252.0, 70.0, 240.2, 77.2, 229.8);
    c.bezierCurveTo(84.4, 219.3, 96.3, 217.5, 96.3, 217.5);
    c.bezierCurveTo(96.3, 217.5, 95.1, 231.3, 87.2, 241.7);
    c.closePath();
    c.fillStyle = 'rgb(254, 196, 168)';
    c.fill();
    c.beginPath();
    c.moveTo(128.8, 241.6);
    c.bezierCurveTo(135.9, 252.8, 150.6, 245.0, 144.3, 233.7);
    c.bezierCurveTo(137.9, 222.4, 126.3, 218.5, 126.3, 218.5);
    c.bezierCurveTo(126.3, 218.5, 121.6, 230.3, 128.8, 241.6);
    c.closePath();
    c.fillStyle = 'rgb(253, 215, 181)';
    c.fill();
    c.beginPath();
    c.moveTo(110.0, 193.6);
    c.bezierCurveTo(116.4, 193.7, 120.3, 202.4, 115.9, 206.6);
    c.bezierCurveTo(111.5, 210.8, 104.5, 210.2, 102.3, 205.5);
    c.bezierCurveTo(100.0, 200.8, 103.7, 193.6, 110.0, 193.6);
    c.closePath();
    c.fillStyle = 'rgb(167, 25, 25)';
    c.fill();
}

var graphics_elements = {
    'branch': { id: 'branch', bounds: { x: 193.9, y: 116.1, width: 244.6, height: 312.4 }, drawfunction: graphics_draw_000 },
    'flower1': { id: 'flower1', bounds: { x: 245.4, y: 31.5, width: 107.8, height: 120.4 }, drawfunction: graphics_draw_001 },
    'flower2': { id: 'flower2', bounds: { x: 248.9, y: 457.7, width: 105.6, height: 117.2 }, drawfunction: graphics_draw_002 },
    'star1': { id: 'star1', bounds: { x: 411.7, y: 118.7, width: 140.5, height: 138.0 }, drawfunction: graphics_draw_003 },
    'star2': { id: 'star2', bounds: { x: 75.9, y: 366.1, width: 84.2, height: 82.7 }, drawfunction: graphics_draw_004 },
    'gingerbread1': { id: 'gingerbread1', bounds: { x: 433.3, y: 355.7, width: 94.8, height: 105.5 }, drawfunction: graphics_draw_005 },
    'gingerbread2': { id: 'gingerbread2', bounds: { x: 55.6, y: 137.2, width: 108.6, height: 131.0 }, drawfunction: graphics_draw_006 }
};

function graphics_draw(context, id, x, y, width, height)
{
    var element = graphics_elements[id];
    if (element !== undefined) {
        context.save();
        context.translate(x, y);
        if (width !== undefined && height !== undefined)
            context.scale(width / element.bounds.width, height / element.bounds.height);
        context.translate(-element.bounds.x, -element.bounds.y);
        element.drawfunction(context);
        context.restore();
    }
}

