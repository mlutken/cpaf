add_subdirectory(luepp)
if ( NOT (CMAKE_SYSTEM_NAME MATCHES "Emscripten") )

    # --- WebCC ---
    set(WEBCC_ENABLE_SSL   1 CACHE STRING "Enable SSL/HTTPS (need OpenSSL)? (1:Yes, 0:No)")
    set(WEBCC_ENABLE_GZIP  1 CACHE STRING "Enable gzip compression (need Zlib)? (1:Yes, 0:No)")
    add_subdirectory(webcc)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/config.h.in" "${CMAKE_BINARY_DIR}/install/include/webcc/config.h" )

    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/base64.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/body.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/client.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/client_pool.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/client_session.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/common.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/connection.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/connection_pool.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/globals.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/gzip.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/logger.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/message.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/parser.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/queue.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/request_builder.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/request.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/request_parser.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/response_builder.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/response.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/response_parser.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/router.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/server.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/socket.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/string.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/url.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/utility.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/version.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)
    configure_file( "${CMAKE_CURRENT_LIST_DIR}/webcc/webcc/view.h" "${CMAKE_BINARY_DIR}/install/include/webcc/" COPY_ONLY)

    add_subdirectory(sparsehash)
    ##add_subdirectory(fifo_map)
    ##add_subdirectory(json)
    add_subdirectory(loki)
    add_subdirectory(utf8)
endif()

